asyncapi: '2.6.0'
info:
  title: Kubescape Synchronizer API
  version: '1.0.0'
  description: |
    The Kubescape Synchronizer API used to synchronize objects between
    Kubernetes clusters and a compatible backend.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  localhost:
    url: localhost:8080
    protocol: ws
    description: Local broker
defaultContentType: application/json
channels:
  /:
    publish:
      description: Send messages to the API
      message:
        oneOf:
          - $ref: '#/components/messages/newChecksum'
          - $ref: '#/components/messages/objectDeleted'
          - $ref: '#/components/messages/getObject'
          - $ref: '#/components/messages/patchObject'
          - $ref: '#/components/messages/putObject'
          - $ref: '#/components/messages/batch'
    subscribe:
      description: Messages that you receive from the API
      message:
        oneOf:
          - $ref: '#/components/messages/newChecksum'
          - $ref: '#/components/messages/objectDeleted'
          - $ref: '#/components/messages/getObject'
          - $ref: '#/components/messages/patchObject'
          - $ref: '#/components/messages/putObject'
          - $ref: '#/components/messages/batch'
components:
  messages:
    generic:
      description: A generic message sent to the API
      payload:
        $ref: '#/components/schemas/generic'
    newChecksum:
      description: Event sent when a new checksum is observed
      payload:
        $ref: '#/components/schemas/newChecksum'
    objectDeleted:
      description: Event sent when an object is deleted
      payload:
        $ref: '#/components/schemas/objectDeleted'
    getObject:
      description: Ask for an object to be sent back
      payload:
        $ref: '#/components/schemas/getObject'
    patchObject:
      description: Send a patch to apply to an object
      payload:
        $ref: '#/components/schemas/patchObject'
    putObject:
      description: Send an object
      payload:
        $ref: '#/components/schemas/putObject'
    batch:
      description: Send a batch of messages
      payload:
        $ref: '#/components/schemas/batch'
  schemas:
    generic:
      type: object
      properties:
        depth:
          $ref: '#/components/schemas/depth'
        event:
          $ref: '#/components/schemas/event'
        kind:
          $ref: '#/components/schemas/kind'
        msgID:
          $ref: '#/components/schemas/msgID'
    newChecksum:
      type: object
      properties:
        resourceVersion:
          $ref: '#/components/schemas/resourceVersion'
        checksum:
          $ref: '#/components/schemas/sum'
        depth:
          $ref: '#/components/schemas/depth'
        event:
          $ref: '#/components/schemas/event'
        kind:
          $ref: '#/components/schemas/kind'
        msgID:
          $ref: '#/components/schemas/msgID'
        name:
          $ref: '#/components/schemas/name'
        namespace:
          $ref: '#/components/schemas/namespace'
    objectDeleted:
      type: object
      properties:
        resourceVersion:
          $ref: '#/components/schemas/resourceVersion'
        depth:
          $ref: '#/components/schemas/depth'
        event:
          $ref: '#/components/schemas/event'
        kind:
          $ref: '#/components/schemas/kind'
        msgID:
          $ref: '#/components/schemas/msgID'
        name:
          $ref: '#/components/schemas/name'
        namespace:
          $ref: '#/components/schemas/namespace'
    getObject:
      type: object
      properties:
        resourceVersion:
          $ref: '#/components/schemas/resourceVersion'
        baseObject:
          $ref: '#/components/schemas/object'
        depth:
          $ref: '#/components/schemas/depth'
        event:
          $ref: '#/components/schemas/event'
        kind:
          $ref: '#/components/schemas/kind'
        msgID:
          $ref: '#/components/schemas/msgID'
        name:
          $ref: '#/components/schemas/name'
        namespace:
          $ref: '#/components/schemas/namespace'
    patchObject:
      type: object
      properties:
        checksum:
          $ref: '#/components/schemas/sum'
        resourceVersion:
          $ref: '#/components/schemas/resourceVersion'
        depth:
          $ref: '#/components/schemas/depth'
        event:
          $ref: '#/components/schemas/event'
        kind:
          $ref: '#/components/schemas/kind'
        msgID:
          $ref: '#/components/schemas/msgID'
        name:
          $ref: '#/components/schemas/name'
        namespace:
          $ref: '#/components/schemas/namespace'
        patch:
          $ref: '#/components/schemas/object'
    putObject:
      type: object
      properties:
        resourceVersion:
          $ref: '#/components/schemas/resourceVersion'
        depth:
          $ref: '#/components/schemas/depth'
        event:
          $ref: '#/components/schemas/event'
        kind:
          $ref: '#/components/schemas/kind'
        msgID:
          $ref: '#/components/schemas/msgID'
        name:
          $ref: '#/components/schemas/name'
        namespace:
          $ref: '#/components/schemas/namespace'
        object:
          $ref: '#/components/schemas/object'
    depth:
      type: integer
      description: depth of the message exchange, used to break recursion
    event:
      type: string
      description: type of event, always append new types to not break compatibility
      enum:
        - newChecksum
        - objectAdded # deprecated
        - objectDeleted
        - objectModified # deprecated 
        - getObject
        - patchObject
        - putObject
        - ping
        - batch
    kind:
      type: object
      description: unambiguously identifies a resource
      properties:
        group:
          type: string
        version:
          type: string
        resource:
          type: string
    resourceVersion:
      type: integer
      description: resource version of the object
    msgID:
      type: string
      description: unique identifier of the message
    name:
      type: string
      description: name of the object
    namespace:
      type: string
      description: namespace of the object
    object:
      type: string
      description: The object is encoded in JSON
    sum:
      type: string
      description: The checksum of the object
    batchItems:
      type: object
      properties:
        putObject:
          type: array
          items:
            $ref: '#/components/schemas/putObject'
        newChecksum:
          type: array
          items:
            $ref: '#/components/schemas/newChecksum'
        objectDeleted:
          type: array
          items:
            $ref: '#/components/schemas/objectDeleted'
        getObject:
          type: array
          items:
            $ref: '#/components/schemas/getObject'
        patchObject:
          type: array
          items:
            $ref: '#/components/schemas/patchObject'
    batch:
      type: object
      properties:
        depth:
          $ref: '#/components/schemas/depth'
        event:
          $ref: '#/components/schemas/event'
        msgID:
          $ref: '#/components/schemas/msgID'
        kind:
          $ref: '#/components/schemas/kind'
        batchType:
          type: string
          description: batch type could be used to distinguish between different types of batches which require different processing
        items:
          $ref: '#/components/schemas/batchItems'